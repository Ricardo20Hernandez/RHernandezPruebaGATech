//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class evaluacion_rhernandezEntities : DbContext
    {
        public evaluacion_rhernandezEntities()
            : base("name=evaluacion_rhernandezEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Resuman> Resumen { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
    
        public virtual int AddTickets(string id_Tienda, string id_Registradora, Nullable<System.DateTime> fechaHora, Nullable<int> ticket, Nullable<decimal> impuesto, Nullable<decimal> total, Nullable<System.DateTime> fechaHora_Creacion)
        {
            var id_TiendaParameter = id_Tienda != null ?
                new ObjectParameter("Id_Tienda", id_Tienda) :
                new ObjectParameter("Id_Tienda", typeof(string));
    
            var id_RegistradoraParameter = id_Registradora != null ?
                new ObjectParameter("Id_Registradora", id_Registradora) :
                new ObjectParameter("Id_Registradora", typeof(string));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("FechaHora", fechaHora) :
                new ObjectParameter("FechaHora", typeof(System.DateTime));
    
            var ticketParameter = ticket.HasValue ?
                new ObjectParameter("Ticket", ticket) :
                new ObjectParameter("Ticket", typeof(int));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("Impuesto", impuesto) :
                new ObjectParameter("Impuesto", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var fechaHora_CreacionParameter = fechaHora_Creacion.HasValue ?
                new ObjectParameter("FechaHora_Creacion", fechaHora_Creacion) :
                new ObjectParameter("FechaHora_Creacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTickets", id_TiendaParameter, id_RegistradoraParameter, fechaHoraParameter, ticketParameter, impuestoParameter, totalParameter, fechaHora_CreacionParameter);
        }
    }
}
